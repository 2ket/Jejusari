<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
	
	<!-- Spring DB -->
	<bean id="driverManagerDataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/>
		<property name="url" value="jdbc:oracle:thin:@localhost:1521:xe"/>
		<property name="username" value="mvc"/>
		<property name="password" value="1234"/>
	</bean>
	
	
	
	
	<!-- MyBatis : SqlSessionFactoryBean -->
	<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="driverManagerDataSource"/>
		<!-- <property name="mapperLocations">
			<list>
				<value>classpath:com/java/member/dao/mapper/MemberMapper.xml</value>
				<value>classpath:com/java/fileBoard/dao/mapper/FileBoardMapper.xml</value>
			</list>
		</property> -->
		
		<!-- 한번에 써주는 법 -->
		<property name="mapperLocations" value="classpath:com/java/**/*.xml"></property>
	</bean>
	
	
	
	
	<!-- MyBatis : SqlSessionTemplate -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSessionFactoryBean"/>
	</bean>
	
	
	
	
	<!-- Transaction : 공통클래스라고 생각 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="driverManagerDataSource"/>
	</bean>
	
	
	
	<!-- Transaction AOP -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED" rollback-for="Exception"/>			<!-- 모든(*) 쿼리문에 트랜잭션을 걸어준다 -->
		</tx:attributes>
	</tx:advice>
	<!-- propagation="REQUIRED" : 이미 하나의 트랜잭션이 존재하면 지원하고 없으면 새로 지원한다. -->
	<!-- rollback-for="Exception" : 실패하면 예외처리 -->
	
	
	<aop:config>
		<aop:pointcut expression="within(com.java..*)" id="txPublic"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPublic"/>
	</aop:config>
</beans>
